{"version":3,"sources":["logo.svg","actions/types.js","actions/projectAction.js","components/project/ProjectItem.js","components/project/ProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/UpdateProject.js","components/projectBoard/projectTasks/ProjectTask.js","actions/backlogAction.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/projectTasks/AddProjectTask.js","components/projectBoard/projectTasks/UpdateProjectTask.js","components/layout/Landing.js","components/userManagement/Register.js","components/userManagement/Login.js","securityUtils/SecurityRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_ERRORS","createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDelete","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","delete","ProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","console","log","classnames","placeholder","initialState","projectTasks","projectTask","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updateProject","match","params","getProject","disabled","ProjectTask","backlog_id","ps_id","deleteProjectTask","priorityString","priorityClass","project_task","priority","summary","acceptanceCriteria","onDeleteClicked","Backlog","project_task_props","tasks","toDoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklogs","boardContent","projectTaskNotFound","role","boardAlgo","resp","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","createdAt","getProjectTask","updateProjectTasks","updateProjectTask","patch","Landing","Register","password","username","confirmPassword","error","registerUser","createNewUser","userAlreadyExists","newUser","Login","loginUser","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"+KAAAA,EAAOC,QAAU,IAA0B,kC,uMCA9BC,EAAa,aCGbC,EAAgB,SAACC,EAASC,GAAV,OAAsB,SAAMC,GAAN,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAE7BE,IAAMC,KAAK,WAAYN,IAFM,cAG/CC,EAAQM,KAAK,cACbL,EAAS,CACPM,KAAMV,EACNW,QAAS,KANoC,gDAS/CP,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAIC,SAASC,OAXuB,0DCG7CC,E,2MACJC,SAAW,SAAAC,GACT,EAAKC,MAAMC,cAAcF,I,wEAGjB,IACAd,EAAYiB,KAAKF,MAAjBf,QAER,OACE,yBAAKkB,UAAU,aACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,WAAWlB,EAAQmB,oBAErC,yBAAKD,UAAU,2BACb,4BAAKlB,EAAQoB,aACb,2BAAIpB,EAAQqB,cAEd,yBAAKH,UAAU,8BACb,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMI,GAAE,wBAAmBtB,EAAQmB,oBACjC,wBAAID,UAAU,yBACZ,uBAAGA,UAAU,6BAAb,qBAGJ,kBAAC,IAAD,CAAMI,GAAE,yBAAoBtB,EAAQmB,oBAClC,wBAAID,UAAU,0BACZ,uBAAGA,UAAU,mBAAb,0BAIJ,wBAAIA,UAAU,0BACZ,uBACEA,UAAU,0BACVK,QAASN,KAAKJ,SAASW,KACrBP,KACAjB,EAAQmB,oBAJZ,4B,GAjCQM,aAwDXC,cACb,KACA,CACEV,cD1ByB,SAAAF,GAAE,OAAI,SAAMZ,GAAN,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACfE,IAAMsB,OAAN,mBAAyBb,KADV,cAEjCZ,EAAS,CACPM,KDvC0B,iBCwC1BC,QAASK,IAJsB,wCCuBpBY,CAKbd,GCvDagB,EATO,WACpB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAMP,GAAG,cAAcJ,UAAU,uBAAjC,sBCCAY,E,4LAEFb,KAAKF,MAAMgB,gB,+BAGH,IACAC,EAAaf,KAAKF,MAAMf,QAAxBgC,SAER,OACE,yBAAKd,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAd,YACA,6BACA,kBAAC,EAAD,MACA,6BACA,6BACCc,EAASC,KAAI,SAAAjC,GAAO,OACnB,kBAAC,EAAD,CAAakC,IAAKlC,EAAQc,GAAId,QAASA,e,GAnB/ByB,aAqCTC,eATQ,SAAAS,GAAK,MAAK,CAC/BnC,QAASmC,EAAMnC,WAUf,CAAE+B,YH3BuB,kBAAM,SAAM7B,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACbE,IAAM+B,IAAI,iBADG,OACzBC,EADyB,OAE/BnC,EAAS,CACPM,KDrBwB,eCsBxBC,QAAS4B,EAAI1B,OAJgB,wCGyBlBe,CAGbI,G,yBCrCaQ,EARK,SAAAC,GACdA,EACFlC,IAAMmC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1ClC,IAAMmC,SAASC,QAAQC,OAAvB,e,iBCuDEC,EAAS,kBAAM,SAAMzC,GAAN,SAAAC,EAAAC,OAAA,gDAC1BwC,aAAaC,WAAW,YACxBP,GAAY,GACZpC,EAAS,CACPM,KNtD4B,mBMuD5BC,QAAS,KALe,uCCpDtBqC,E,iLAEF7B,KAAKF,MAAM4B,SACXI,OAAOC,SAASC,KAAO,M,+BAEf,IAiDJC,EAjDG,EACsBjC,KAAKF,MAAMoC,SAAhCC,EADD,EACCA,WAAYC,EADb,EACaA,KAEdC,EACJ,yBAAKpC,UAAU,2BAA2BJ,GAAG,cAC3C,wBAAII,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,cAA9B,eAMJ,wBAAIJ,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMI,GAAG,aAAaJ,UAAU,aAC9B,uBAAGA,UAAU,4BADf,IAC+CmC,EAAKE,WAGtD,wBAAIrC,UAAU,YACZ,kBAAC,IAAD,CACEI,GAAG,UACHJ,UAAU,WACVK,QAASN,KAAK0B,OAAOnB,KAAKP,OAH5B,aAYFuC,EACJ,yBAAKtC,UAAU,2BAA2BJ,GAAG,cAC3C,wBAAII,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,aAA/B,YAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMI,GAAG,SAASJ,UAAU,YAA5B,YAgBR,OALEgC,EADEE,GAAcC,EACFC,EAEAE,EAId,yBAAKtC,UAAU,uDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeI,GAAG,KAAlC,oCAGA,4BACEJ,UAAU,iBACVV,KAAK,SACLiD,cAAY,WACZC,cAAY,eAEZ,0BAAMxC,UAAU,yBAEjBgC,Q,GA5EUzB,aA4FNC,eAJQ,SAAAS,GAAK,MAAK,CAC/BgB,SAAUhB,EAAMgB,YAKhB,CAAER,UAFWjB,CAGboB,G,wBClGIa,E,YACJ,aAAe,IAAD,8BACZ,+CAEKxB,MAAQ,CACXhB,kBAAmB,GACnBC,YAAa,GACbC,YAAa,GACbuC,UAAW,GACXC,QAAS,GACTC,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAbJ,E,uFAkBYyC,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAK7BK,GACPlD,KAAKiD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAMC,EAAa,CACjBrD,kBAAmBF,KAAKkB,MAAMhB,kBAC9BC,YAAaH,KAAKkB,MAAMf,YACxBC,YAAaJ,KAAKkB,MAAMd,YACxBuC,UAAW3C,KAAKkB,MAAMyB,UACtBC,QAAS5C,KAAKkB,MAAM0B,SAGtB5C,KAAKF,MAAMhB,cAAcyE,EAAYvD,KAAKF,MAAMd,SAChDwE,QAAQC,IAAIF,K,+BAGJ,IACAV,EAAW7C,KAAKkB,MAAhB2B,OACR,OACE,6BAGE,yBAAK5C,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAM8C,SAAU/C,KAAK+C,UACnB,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAO1C,cAEvBwD,YAAY,eACZP,KAAK,cACLC,MAAOrD,KAAKkB,MAAMf,YAClB2C,SAAU9C,KAAK8C,WAEhBD,EAAO1C,aACN,yBAAKF,UAAU,oBACZ4C,EAAO1C,cAId,yBAAKF,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAO3C,oBAEvByD,YAAY,oBACZP,KAAK,oBACLC,MAAOrD,KAAKkB,MAAMhB,kBAClB4C,SAAU9C,KAAK8C,WAEhBD,EAAO3C,mBACN,yBAAKD,UAAU,oBACZ4C,EAAO3C,oBAKd,yBAAKD,UAAU,cACb,8BACEA,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAOzC,cAEvBuD,YAAY,sBACZP,KAAK,cACLC,MAAOrD,KAAKkB,MAAMd,YAClB0C,SAAU9C,KAAK8C,WAEhBD,EAAOzC,aACN,yBAAKH,UAAU,oBACZ4C,EAAOzC,cAId,0CACA,yBAAKH,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVmD,KAAK,YACLC,MAAOrD,KAAKkB,MAAMyB,UAClBG,SAAU9C,KAAK8C,YAGnB,kDACA,yBAAK7C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVmD,KAAK,UACLC,MAAOrD,KAAKkB,MAAM0B,QAClBE,SAAU9C,KAAK8C,YAInB,2BACEvD,KAAK,SACLU,UAAU,6C,GAnILO,aAuJVC,eAJQ,SAAAS,GAAK,MAAK,CAC/B2B,OAAQ3B,EAAM2B,UAKd,CAAE/D,iBAFW2B,CAGbiC,G,gBC9JIkB,EAAe,G,QCAfA,EAAe,CACnB7C,SAAU,GACVhC,QAAS,ICEL6E,EAAe,CACnBC,aAAc,GACdC,YAAa,ICPTF,EAAe,CACnBzB,YAAY,EACZC,KAAM,IAGF2B,EAAuB,SAAAvE,GAC3B,QAAIA,GCDSwE,cAAgB,CAC7BnB,OJHa,WAAwC,IAA/B3B,EAA8B,uDAAtB0C,EAAcK,EAAQ,uCACpD,OAAQA,EAAO1E,MACb,KAAKV,EACH,OAAOoF,EAAOzE,QAEhB,QACE,OAAO0B,IIFXnC,QHDa,WAAwC,IAA/BmC,EAA8B,uDAAtB0C,EAAcK,EAAQ,uCACpD,OAAQA,EAAO1E,MACb,IVRwB,eUStB,OAAO,eACF2B,EADL,CAEEH,SAAUkD,EAAOzE,UAGrB,IVbuB,cUcrB,OAAO,eACF0B,EADL,CAEEnC,QAASkF,EAAOzE,UAGpB,IVlB0B,iBUmBxB,OAAO,eACF0B,EADL,CAEEH,SAAUG,EAAMH,SAASmD,QACvB,SAAAnF,GAAO,OAAIA,EAAQmB,oBAAsB+D,EAAOzE,aAGtD,QACE,OAAO0B,IGpBXiD,QFEa,WAAwC,IAA/BjD,EAA8B,uDAAtB0C,EAAcK,EAAQ,uCACpD,OAAQA,EAAO1E,MACb,IXNuB,cWOrB,OAAO,eACF2B,EADL,CAEE2C,aAAcI,EAAOzE,UAGzB,IXX4B,mBWY1B,OAAO,eACF0B,EADL,CAEE4C,YAAaG,EAAOzE,UAGxB,IXhB+B,sBWiB7B,OAAO,eACF0B,EADL,CAEE2C,aAAc3C,EAAM2C,aAAaK,QAC/B,SAAAL,GAAY,OAAIA,EAAaO,kBAAoBH,EAAOzE,aAG9D,QACE,OAAO0B,IEvBXgB,SDIa,WAAwC,IAA/BhB,EAA8B,uDAAtB0C,EAAcK,EAAQ,uCACpD,OAAQA,EAAO1E,MACb,IZL4B,mBYM1B,OAAO,eACF2B,EADL,CAEEiB,WAAY4B,EAAqBE,EAAOzE,SACxC4C,KAAM6B,EAAOzE,UAGjB,QACE,OAAO0B,MEpBP0C,EAAe,GACfS,EAAa,CAACC,KAIdC,EACJzC,OAAO0C,8BAAgC1C,OAAO0C,+BAmBjCC,EAjBX3C,OAAO4C,UAAUC,UAAUC,SAAS,WAAaL,EAC3CM,YACNC,EACAlB,EACAmB,YACEC,IAAe,WAAf,EAAmBX,GACnBE,IAIIM,YACNC,EACAlB,EACAmB,YAAQC,IAAe,WAAf,EAAmBX,KCnBzBY,E,YACJ,aAAe,IAAD,8BACZ,+CACK/D,MAAQ,CACXhB,kBAAmB,GACnBL,GAAI,GACJM,YAAa,GACbC,YAAa,GACbuC,UAAW,GACXC,QAAS,GACTC,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAbJ,E,sEAeL2C,GACPlD,KAAKiD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAM4B,EAAgB,CACpBrF,GAAIG,KAAKkB,MAAMrB,GACfK,kBAAmBF,KAAKkB,MAAMhB,kBAC9BC,YAAaH,KAAKkB,MAAMf,YACxBC,YAAaJ,KAAKkB,MAAMd,YACxBuC,UAAW3C,KAAKkB,MAAMyB,UACtBC,QAAS5C,KAAKkB,MAAM0B,SAGtB5C,KAAKF,MAAMhB,cAAcoG,EAAelF,KAAKF,MAAMd,W,gDAG3BgE,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,SAFD,MAY/BG,EAAUjE,QANZc,EANiC,EAMjCA,GACAK,EAPiC,EAOjCA,kBACAC,EARiC,EAQjCA,YACAC,EATiC,EASjCA,YACAuC,EAViC,EAUjCA,UACAC,EAXiC,EAWjCA,QAGF5C,KAAKiD,SAAS,CACZpD,KACAK,oBACAC,cACAC,cACAuC,YACAC,c,2CAIkB,IACZ/C,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACRG,KAAKF,MAAMuF,WAAWxF,EAAIG,KAAKF,MAAMd,W,+BAG7B,IACA6D,EAAW7C,KAAKkB,MAAhB2B,OACR,OACE,yBAAK5C,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,qBACA,6BACA,0BAAM8C,SAAU/C,KAAK+C,UACnB,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAO1C,cAEvBwD,YAAY,eACZP,KAAK,cACLC,MAAOrD,KAAKkB,MAAMf,YAClB2C,SAAU9C,KAAK8C,WAEhBD,EAAO1C,aACN,yBAAKF,UAAU,oBAAoB4C,EAAO1C,cAG9C,yBAAKF,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAO3C,oBAEvByD,YAAY,oBACZP,KAAK,oBACLC,MAAOrD,KAAKkB,MAAMhB,kBAClB4C,SAAU9C,KAAK8C,SACfwC,UAAQ,IAETzC,EAAO3C,mBACN,yBAAKD,UAAU,oBACZ4C,EAAO3C,oBAKd,yBAAKD,UAAU,cACb,8BACEA,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAOzC,cAEvBuD,YAAY,sBACZP,KAAK,cACLC,MAAOrD,KAAKkB,MAAMd,YAClB0C,SAAU9C,KAAK8C,WAEhBD,EAAOzC,aACN,yBAAKH,UAAU,oBAAoB4C,EAAOzC,cAG9C,0CACA,yBAAKH,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVmD,KAAK,YACLC,MAAOrD,KAAKkB,MAAMyB,UAClBG,SAAU9C,KAAK8C,YAGnB,kDACA,yBAAK7C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVmD,KAAK,UACLC,MAAOrD,KAAKkB,MAAM0B,QAClBE,SAAU9C,KAAK8C,YAInB,2BACEvD,KAAK,SACLU,UAAU,4C,GAhJAO,aAuKbC,eALQ,SAAAS,GAAK,MAAK,CAC/BnC,QAASmC,EAAMnC,QAAQA,QACvB8D,OAAQ3B,EAAM2B,UAKd,CAAEwC,WdpJsB,SAACxF,EAAIb,GAAL,OAAiB,SAAMC,GAAN,eAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAErBE,IAAM+B,IAAN,mBAAsBtB,KAFD,OAEjCuB,EAFiC,OAGvCnC,EAAS,CACPM,KD7BqB,cC8BrBC,QAAS4B,EAAI1B,OALwB,gDAQvCV,EAAQM,KAAK,cAR0B,0DcoJ3BR,iBAFD2B,CAGbwE,GCzKIM,E,wLACYC,EAAYC,GAC1BzF,KAAKF,MAAM4F,kBAAkBF,EAAYC,K,+BAGjC,IAEJE,EACAC,EAFIC,EAAiB7F,KAAKF,MAAtB+F,aAwBR,OApB8B,IAA1BA,EAAaC,WACfH,EAAiB,OACjBC,EAAgB,wBAGY,IAA1BC,EAAaC,WACfH,EAAiB,SACjBC,EAAgB,yBAGY,IAA1BC,EAAaC,WACfH,EAAiB,MACjBC,EAAgB,sBAGY,IAA1BC,EAAaC,WACfH,EAAiB,MACjBC,EAAgB,sBAIhB,yBAAK3F,UAAU,sBACb,yBAAKA,UAAS,mCAA8B2F,IAA5C,OACOC,EAAazB,gBADpB,gBACkDuB,GAElD,yBAAK1F,UAAU,sBACb,wBAAIA,UAAU,cAAc4F,EAAaE,SACzC,uBAAG9F,UAAU,4BACV4F,EAAaG,oBAGhB,kBAAC,IAAD,CACE3F,GAAE,6BAAwBwF,EAAa3F,kBAArC,YAA0D2F,EAAazB,iBACzEnE,UAAU,mBAFZ,iBAOA,4BACEA,UAAU,sBACVK,QAASN,KAAKiG,gBAAgB1F,KAC5BP,KACA6F,EAAa3F,kBACb2F,EAAazB,kBALjB,gB,GAhDgB5D,aAqEXC,eACb,KACA,CAAEiF,kBCK6B,SAACF,EAAYC,GAAb,OAAuB,SAAMxG,GAAN,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEjCE,IAAMsB,OAAN,0CACkB8E,EADlB,YACgCC,KAHC,cAMpDxG,EAAS,CACPM,KjBjF6B,sBiBkF7BC,QAASiG,IARyC,gDAWpDxG,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAMC,SAASC,OAb0B,2DDPzCe,CAGb8E,GEQaW,G,iLAnFH,IACAC,EAAuBnG,KAAKF,MAA5BqG,mBAI4B,IAAhCA,EAAmBL,UACJ,OAYnB,IARA,IAAMM,EAAQD,EAAmBnF,KAAI,SAAA6E,GAAY,OAC/C,kBAAC,GAAD,CAAa5E,IAAK4E,EAAahG,GAAIgG,aAAcA,OAG/CQ,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEPC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAChChD,QAAQC,IAAI2C,EAAMI,GAAG1G,MAAM+F,aAAaa,QAGG,UAAvCN,EAAMI,GAAG1G,MAAM+F,aAAaa,QAC9BL,EAAU/G,KAAK8G,EAAMI,IAIoB,gBAAvCJ,EAAMI,GAAG1G,MAAM+F,aAAaa,QAC9BJ,EAAgBhH,KAAK8G,EAAMI,IAIc,SAAvCJ,EAAMI,GAAG1G,MAAM+F,aAAaa,QAC9BH,EAAUjH,KAAK8G,EAAMI,IAIzB,OACE,6BACE,yBAAKvG,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uCACb,uCAGHoG,GAKH,yBAAKpG,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,6CAGHqG,GAMH,yBAAKrG,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,sCAGHsG,U,GAvEO/F,aCKhBmG,G,YACJ,aAAe,IAAD,8BACZ,+CACKzF,MAAQ,CACX2B,OAAQ,IAHE,E,uFAOYG,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,W,0CAIjB,IACXhD,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GAERG,KAAKF,MAAM8G,YAAY/G,K,+BAGf,IAKJgH,EAJIhH,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACAgE,EAAiB7D,KAAKF,MAAMqE,QAA5BN,aAiCR,OAFAgD,EA1BkB,SAAChE,EAAQgB,GACzB,OAAIA,EAAa4C,OAAS,EACpB5D,EAAOiE,oBAEP,yBAAK7G,UAAU,iCAAiC8G,KAAK,SAClDlE,EAAOiE,qBAGHjE,EAAO3C,kBAEd,yBAAKD,UAAU,iCAAiC8G,KAAK,SAClDlE,EAAO3C,mBAKV,yBAAKD,UAAU,+BAA+B8G,KAAK,SAAnD,mBAMG,kBAAC,GAAD,CAASZ,mBAAoBtC,IAIzBmD,CA9BIhH,KAAKkB,MAAhB2B,OA8ByBgB,GAG/B,yBAAK5D,UAAU,aACb,kBAAC,IAAD,CAAMI,GAAE,0BAAqBR,IAC3B,uBAAGI,UAAU,sBAAb,yBAEF,6BACA,6BACC4G,O,GA9DkBrG,aA+EZC,gBAXQ,SAAAS,GAAK,MAAK,CAC/BiD,QAASjD,EAAMiD,QACftB,OAAQ3B,EAAM2B,UAWd,CAAE+D,YF7DuB,SAAApB,GAAU,OAAI,SAAMvG,GAAN,eAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAElBE,IAAM+B,IAAN,mBAAsBqE,KAFJ,OAE/ByB,EAF+B,OAGrChI,EAAS,CACPM,KjBzBqB,ciB0BrBC,QAASyH,EAAKvH,OALqB,gDAQrCT,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAMC,SAASC,OAVW,2DE2D1Be,CAGbkG,ICnFIO,G,YACJ,WAAYpH,GAAQ,IAAD,0BAGTD,GAFR,4CAAMC,KAEcA,MAAMqF,MAAMC,OAAxBvF,GAHS,OAIjB,EAAKqB,MAAQ,CACX6E,QAAS,GACTC,mBAAoB,GACpBmB,QAAS,GACTrB,SAAU,EACVY,OAAQ,GACRxG,kBAAmBL,EACnBgD,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAdC,E,sEAiBV2C,GACPlD,KAAKiD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,gDAKlBL,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAK7BK,GACPA,EAAEI,iBACF,IAAM8D,EAAiB,CACrBrB,QAAS/F,KAAKkB,MAAM6E,QACpBC,mBAAoBhG,KAAKkB,MAAM8E,mBAC/BmB,QAASnH,KAAKkB,MAAMiG,QACpBrB,SAAU9F,KAAKkB,MAAM4E,SACrBY,OAAQ1G,KAAKkB,MAAMwF,QAEb7G,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACRG,KAAKF,MAAMuH,eAAexH,EAAIuH,EAAgBpH,KAAKF,MAAMd,SACzDwE,QAAQC,IAAI2D,K,+BAGJ,IACAvH,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACAgD,EAAW7C,KAAKkB,MAAhB2B,OAER,OACE,yBAAK5C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMI,GAAE,wBAAmBR,GAAMI,UAAU,iBAA3C,yBAGA,wBAAIA,UAAU,yBAAd,oBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAM8C,SAAU/C,KAAK+C,UACnB,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAOkD,UAEvB3C,KAAK,UACLC,MAAOrD,KAAKkB,MAAM6E,QAClBjD,SAAU9C,KAAK8C,SACfa,YAAY,yBAEbd,EAAOkD,SACN,yBAAK9F,UAAU,oBAAoB4C,EAAOkD,UAG9C,yBAAK9F,UAAU,cACb,8BACEA,UAAU,+BACV0D,YAAY,sBACZP,KAAK,qBACLC,MAAOrD,KAAKkB,MAAM8E,mBAClBlD,SAAU9C,KAAK8C,YAGnB,wCACA,yBAAK7C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVmD,KAAK,UACLC,MAAOrD,KAAKkB,MAAMiG,QAClBrE,SAAU9C,KAAK8C,YAGnB,yBAAK7C,UAAU,cACb,4BACEA,UAAU,+BACVmD,KAAK,WACLC,MAAOrD,KAAKkB,MAAM4E,SAClBhD,SAAU9C,KAAK8C,UAEf,4BAAQO,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKpD,UAAU,cACb,4BACEA,UAAU,+BACVmD,KAAK,SACLC,MAAOrD,KAAKkB,MAAMwF,OAClB5D,SAAU9C,KAAK8C,UAEf,4BAAQO,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACE9D,KAAK,SACLU,UAAU,4C,GA5HCO,aAiJdC,gBALQ,SAAAS,GAAK,MAAK,CAE/B2B,OAAQ3B,EAAM2B,UAKd,CAAEwE,eHlJ0B,SAC5B7B,EACAK,EACA7G,GAH4B,OAIzB,SAAMC,GAAN,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEKE,IAAMC,KAAN,mBAAuBmG,GAAcK,IAF1C,OAGD7G,EAAQM,KAAR,wBAA8BkG,IAC9BvG,EAAS,CACPM,KAAMV,EACNW,QAAS,KANV,gDASDP,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAMC,SAASC,OAXzB,2DG4IUe,CAGbyG,ICjJII,G,YACJ,WAAYxH,GAAQ,IAAD,uBACjB,4CAAMA,KAEcA,MAAMqF,MAAMC,OAAxBvF,GAHS,OAIjB,EAAKqB,MAAQ,CACXrB,GAAI,GACJuE,gBAAiB,GACjB2B,QAAS,GACTC,mBAAoB,GACpBU,OAAQ,GACRZ,SAAU,EACVqB,QAAS,KACTI,UAAW,GACXrH,kBAAmB,GACnB2C,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAjBC,E,iFAoBE,IAAD,EACYP,KAAKF,MAAMqF,MAAMC,OAAvCI,EADU,EACVA,WAAYC,EADF,EACEA,MACpBzF,KAAKF,MAAM0H,eAAehC,EAAYC,EAAOzF,KAAKF,MAAMd,W,+BAEjDkE,GACPlD,KAAKiD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAEnCH,GACPA,EAAEI,iBACF,IAAMmE,EAAqB,CACzB5H,GAAIG,KAAKkB,MAAMrB,GACfkG,QAAS/F,KAAKkB,MAAM6E,QACpB3B,gBAAiBpE,KAAKkB,MAAMkD,gBAC5B4B,mBAAoBhG,KAAKkB,MAAM8E,mBAC/BmB,QAASnH,KAAKkB,MAAMiG,QACpBrB,SAAU9F,KAAKkB,MAAM4E,SACrBY,OAAQ1G,KAAKkB,MAAMwF,OACnBa,UAAWvH,KAAKkB,MAAMqG,UACtBrH,kBAAmBF,KAAKkB,MAAMhB,mBAEjBF,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACRG,KAAKF,MAAM4H,kBACT1H,KAAKkB,MAAMhB,kBACXF,KAAKkB,MAAMkD,gBACXqD,EACAzH,KAAKF,MAAMd,W,gDAOWgE,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,SAFD,MAe/BG,EAAUc,YATZjE,EANiC,EAMjCA,GACAuE,EAPiC,EAOjCA,gBACA2B,EARiC,EAQjCA,QACAC,EATiC,EASjCA,mBACAU,EAViC,EAUjCA,OACAZ,EAXiC,EAWjCA,SACAqB,EAZiC,EAYjCA,QACAI,EAbiC,EAajCA,UACArH,EAdiC,EAcjCA,kBAGFF,KAAKiD,SAAS,CACZpD,KACAuE,kBACA2B,UACAC,qBACAU,SACAZ,WACAqB,UACAI,YACArH,wB,+BAIFsD,QAAQC,IAAI,mBADL,IAECZ,EAAW7C,KAAKkB,MAAhB2B,OAER,OACE,yBAAK5C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEI,GAAE,wBAAmBL,KAAKkB,MAAMhB,mBAChCD,UAAU,iBAFZ,yBAMA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,iBACiBD,KAAKkB,MAAMhB,kBAD5B,kBAEGF,KAAKkB,MAAMkD,gBAAiB,KAE/B,0BAAMrB,SAAU/C,KAAK+C,UACnB,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAcb,EAAOkD,UAEvB3C,KAAK,UACLC,MAAOrD,KAAKkB,MAAM6E,QAClBjD,SAAU9C,KAAK8C,WAEhBD,EAAOkD,SACN,yBAAK9F,UAAU,oBAAoB4C,EAAOkD,UAG9C,yBAAK9F,UAAU,cACb,8BACEA,UAAU,+BACV0D,YAAY,sBACZP,KAAK,qBACLC,MAAOrD,KAAKkB,MAAM8E,mBAClBlD,SAAU9C,KAAK8C,YAGnB,wCACA,yBAAK7C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVmD,KAAK,UACLC,MAAOrD,KAAKkB,MAAMiG,QAClBrE,SAAU9C,KAAK8C,YAGnB,yBAAK7C,UAAU,cACb,4BACEA,UAAU,+BACVmD,KAAK,WACLC,MAAOrD,KAAKkB,MAAM4E,SAClBhD,SAAU9C,KAAK8C,UAEf,4BAAQO,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKpD,UAAU,cACb,4BACEA,UAAU,+BACVmD,KAAK,SACLC,MAAOrD,KAAKkB,MAAMwF,OAClB5D,SAAU9C,KAAK8C,UAEf,4BAAQO,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACE9D,KAAK,SACLU,UAAU,4C,GAtKIO,aA8LjBC,gBANQ,SAAAS,GAAK,MAAK,CAE/B4C,YAAa5C,EAAMiD,QAAQL,YAC3BjB,OAAQ3B,EAAM2B,UAKd,CAAE2E,eJ/J0B,SAC5BhC,EACAC,EACAzG,GAH4B,OAIzB,SAAMC,GAAN,eAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEkBE,IAAM+B,IAAN,mBAAsBqE,EAAtB,YAAoCC,KAFtD,OAEKwB,EAFL,OAGDhI,EAAS,CACPM,KjB3C0B,mBiB4C1BC,QAASyH,EAAKvH,OALf,gDAQDV,EAAQM,KAAK,cARZ,0DI2JeoI,kBJ/Ia,SAC/BlC,EACAC,EACAI,EACA7G,GAJ+B,OAK5B,SAAMC,GAAN,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEkBE,IAAMuI,MAAN,mBACLnC,EADK,YACSC,GAC1BI,IAJD,cAMD7G,EAAQM,KAAR,wBAA8BkG,IAC9BvG,EAAS,CACPM,KAAMV,EACNW,QAAS,KATV,gDAYDP,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAMC,SAASC,OAdzB,2DIwIUe,CAGb6G,ICtMIM,G,4LAEE5H,KAAKF,MAAMoC,SAASC,YACtBnC,KAAKF,MAAMd,QAAQM,KAAK,gB,+BAI1B,OACE,yBAAKW,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,oCAGA,uBAAGA,UAAU,QAAb,iEAGA,6BACA,kBAAC,IAAD,CAAMI,GAAG,YAAYJ,UAAU,+BAA/B,WAIA,kBAAC,IAAD,CAAMI,GAAG,SAASJ,UAAU,+BAA5B,kB,GAxBMO,aA4CPC,gBAJQ,SAAAS,GAAK,MAAK,CAC/BgB,SAAUhB,EAAMgB,YAGHzB,CAAwBmH,IC1CjCC,G,YACJ,aAAe,IAAD,8BACZ,+CAEK3G,MAAQ,CACX4G,SAAU,GACVxF,SAAU,GACVyF,SAAU,GACVC,gBAAiB,GACjBC,MAAO,IAET,EAAKnF,SAAW,EAAKA,SAASvC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAXJ,E,sEAaL2C,GACPlD,KAAKiD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAEnCH,GACPA,EAAEI,iBACF,IAAM4E,EAAe,CACnBJ,SAAU9H,KAAKkB,MAAM4G,SACrBxF,SAAUtC,KAAKkB,MAAMoB,SACrByF,SAAU/H,KAAKkB,MAAM6G,SACrBC,gBAAiBhI,KAAKkB,MAAM8G,iBAE9BhI,KAAKF,MAAMqI,cAAcD,EAAclI,KAAKF,MAAMd,SAElDwE,QAAQC,IAAIyE,K,gDAMYlF,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,W,0CAMhC7C,KAAKF,MAAMoC,SAASC,YACtBnC,KAAKF,MAAMd,QAAQM,KAAK,gB,+BAIPU,KAAKkB,MAAhB2B,OACR,OACE,yBAAK5C,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAMgE,OAAO,sBAAsBlB,SAAU/C,KAAK+C,UAChD,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAc1D,KAAKF,MAAM+C,OAAOP,WAElCqB,YAAY,OACZN,MAAOrD,KAAKkB,MAAMoB,SAClBQ,SAAU9C,KAAK8C,SACfM,KAAK,aAENpD,KAAKF,MAAM+C,OAAOP,UACjB,yBAAKrC,UAAU,oBACZD,KAAKF,MAAM+C,OAAOP,WAIzB,yBAAKrC,UAAU,cACb,2BACEV,KAAK,QACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAc1D,KAAKF,MAAM+C,OAAOkF,WAElCpE,YAAY,gBACZP,KAAK,WACLC,MAAOrD,KAAKkB,MAAM6G,SAClBjF,SAAU9C,KAAK8C,YAEf9C,KAAKF,MAAM+C,OAAOkF,UAClB/H,KAAKF,MAAM+C,OAAOuF,oBAClB,yBAAKnI,UAAU,oBACZD,KAAKF,MAAM+C,OAAOkF,WAIzB,yBAAK9H,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAc1D,KAAKF,MAAM+C,OAAOiF,WAElCnE,YAAY,WACZP,KAAK,WACLC,MAAOrD,KAAKkB,MAAM4G,SAClBhF,SAAU9C,KAAK8C,WAEhB9C,KAAKF,MAAM+C,OAAOiF,UACjB,yBAAK7H,UAAU,oBACZD,KAAKF,MAAM+C,OAAOiF,WAIzB,yBAAK7H,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAc1D,KAAKF,MAAM+C,OAAOmF,kBAElCrE,YAAY,mBACZP,KAAK,kBACLC,MAAOrD,KAAKkB,MAAM8G,gBAClBlF,SAAU9C,KAAK8C,WAEhB9C,KAAKF,MAAM+C,OAAOmF,iBACjB,yBAAK/H,UAAU,oBACZD,KAAKF,MAAM+C,OAAOmF,kBAIzB,2BAAOzI,KAAK,SAASU,UAAU,yC,GA5HxBO,aAiJRC,gBALQ,SAAAS,GAAK,MAAK,CAC/B2B,OAAQ3B,EAAM2B,OACdX,SAAUhB,EAAMgB,YAKhB,CAAEiG,cjBrJyB,SAACE,EAASrJ,GAAV,OAAsB,SAAMC,GAAN,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAE7BE,IAAMC,KACtB,uCACAgJ,IAJ6C,cAM/CrJ,EAAQM,KAAK,UACbL,EAAS,CACPM,KAAMV,EACNW,QAAS,KAToC,gDAY/CP,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAIC,SAASC,OAduB,2DiBmJpCe,CAGboH,ICpJIS,G,YACJ,aAAe,IAAD,8BACZ,+CAEKpH,MAAQ,CACX4G,SAAU,GACVC,SAAU,GACVlF,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAASvC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAVJ,E,sEAYL2C,GACPlD,KAAKiD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAMiF,EAAY,CAChBT,SAAU9H,KAAKkB,MAAM4G,SACrBC,SAAU/H,KAAKkB,MAAM6G,UAGvB/H,KAAKF,MAAM0I,MAAMD,GACjB/E,QAAQC,IAAI8E,K,gDAKYvF,GACpBA,EAAUH,QACZ7C,KAAKiD,SAAS,CAAEJ,OAAQG,EAAUH,SAGhCG,EAAUd,SAASC,YACrBnC,KAAKF,MAAMd,QAAQM,KAAK,gB,0CAKtBU,KAAKF,MAAMoC,SAASC,YACtBnC,KAAKF,MAAMd,QAAQM,KAAK,gB,+BAKPU,KAAKkB,MAAhB2B,OACR,OACE,yBAAK5C,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,SACA,0BAAM8C,SAAU/C,KAAK+C,UACnB,yBAAK9C,UAAU,cACb,2BACEV,KAAK,QACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAc1D,KAAKF,MAAM+C,OAAOkF,WAElCpE,YAAY,gBACZP,KAAK,WACLC,MAAOrD,KAAKkB,MAAM6G,SAClBjF,SAAU9C,KAAK8C,WAEhB9C,KAAKF,MAAM+C,OAAOkF,UACjB,yBAAK9H,UAAU,oBACZD,KAAKF,MAAM+C,OAAOkF,WAIzB,yBAAK9H,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWyD,IAAW,+BAAgC,CACpD,aAAc1D,KAAKF,MAAM+C,OAAOiF,WAElCnE,YAAY,WACZP,KAAK,WACLC,MAAOrD,KAAKkB,MAAM4G,SAClBhF,SAAU9C,KAAK8C,WAEhB9C,KAAKF,MAAM+C,OAAOiF,UACjB,yBAAK7H,UAAU,oBACZD,KAAKF,MAAM+C,OAAOiF,WAIzB,2BAAOvI,KAAK,SAASU,UAAU,yC,GAzF3BO,aA8GLC,gBALQ,SAAAS,GAAK,MAAK,CAC/B2B,OAAQ3B,EAAM2B,OACdX,SAAUhB,EAAMgB,YAKhB,CAAEsG,MlB/FiB,SAAAC,GAAY,OAAI,SAAMxJ,GAAN,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEfE,IAAMC,KACtB,sCACAoJ,IAJ+B,OAE3BrH,EAF2B,OASzBE,EAAUF,EAAI1B,KAAd4B,MAIRK,aAAa+G,QAAQ,WAAYpH,GAIjCD,EAAYC,GAINqH,EAAUC,IAAWtH,GAI3BrC,EAAS,CACPM,KNvC0B,mBMwC1BC,QAASmJ,IA3BsB,kDA8BjC1J,EAAS,CACPM,KAAMV,EACNW,QAAS,KAAIC,SAASC,OAhCS,4DkB6FtBe,CAGb6H,I,SC9Fa7H,gBAJS,SAAAS,GAAK,MAAK,CAChCgB,SAAUhB,EAAMgB,YAGHzB,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAGqI,UAAsB3G,EAAzB,EAAyBA,SAAa4G,EAAtC,gDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAjJ,GAAK,OACa,IAAxBoC,EAASC,WACP,kBAAC3B,EAAcV,GAEf,kBAAC,IAAD,CAAUO,GAAG,kBCYf2I,GAAWrH,aAAaqH,SAE9B,GAAIA,GAAU,CACZ3H,EAAY2H,IAGZ,IAAML,GAAUC,IAAWI,IAE3BvE,EAAMxF,SAAS,CACbM,K1BtB4B,mB0BuB5BC,QAASmJ,KAGX,IAAMM,GAAcC,KAAKC,MAAQ,IAE7BR,GAAQS,IAAMH,KAEhBxE,EAAMxF,SAASyC,KACfI,OAAOC,SAASC,KAAO,KAkDZqH,OA9Cf,WACE,OACE,kBAAC,IAAD,CAAU5E,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKxE,UAAU,OACb,kBAAC,EAAD,MAKA,kBAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAK,IAAIV,UAAWjB,KACjC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,YAAYV,UAAWhB,KACzC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,SAASV,UAAWP,KAItC,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcgB,OAAK,EAACC,KAAK,aAAaV,UAAWhI,IACjD,kBAAC,GAAD,CAAcyI,OAAK,EAACC,KAAK,cAAcV,UAAWnG,IAClD,kBAAC,GAAD,CACE4G,OAAK,EACLC,KAAK,qBACLV,UAAW5D,IAEb,kBAAC,GAAD,CACEqE,OAAK,EACLC,KAAK,oBACLV,UAAWlC,KAEb,kBAAC,GAAD,CACE2C,OAAK,EACLC,KAAK,sBACLV,UAAW3B,KAEb,kBAAC,GAAD,CACEoC,OAAK,EACLC,KAAK,wCACLV,UAAWvB,UCvELkC,QACW,cAA7B1H,OAAOC,SAAS0H,UAEe,UAA7B3H,OAAOC,SAAS0H,UAEhB3H,OAAOC,SAAS0H,SAAStE,MACvB,2DCZNuE,IAASX,OAAO,kBAAC,GAAD,MAASY,SAASC,eAAe,SD6H3C,kBAAmBlF,WACrBA,UAAUmF,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4980487a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Backlog actio types\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    const res = await axios.post(\"/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  const res = await axios.delete(`/project/${id}`);\n  dispatch({\n    type: DELETE_PROJECT,\n    payload: id\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectAction\";\n\nclass ProjectItem extends Component {\n  onDelete = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li className=\"list-group-item delete\">\n                  <i\n                    className=\"fa fa-minus-circle pr-1\"\n                    onClick={this.onDelete.bind(\n                      this,\n                      project.projectIdentifier\n                    )}\n                  >\n                    Delete Project\n                  </i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    deleteProject\n  }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\nexport default ProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport ProjectButton from \"./project/ProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectAction\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <ProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProp = state => ({\n  project: state.project\n});\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nexport default connect(\n  mapStateToProp,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    const res = await axios.post(\n      \"http://3.20.54.196:8080/users/signup\",\n      newUser\n    );\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\n      \"http://3.20.54.196:8080/users/login\",\n      LoginRequest\n    );\n\n    //EXTRACT TOKEN\n\n    const { token } = res.data;\n\n    //Store token in local storage\n\n    localStorage.setItem(\"jwtToken\", token);\n\n    //set token in header\n\n    setJWTToken(token);\n\n    //decode token on react\n\n    const decoded = jwt_decode(token);\n\n    // dispatch to security reducer\n\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\nimport { SET_CURRENT_USER } from \"../../actions//types\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/dashboard\" className=\"nav-link \">\n              <i className=\"fas fa-user-circle mr-1\"></i> {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/logout\"\n              className=\"nav-link\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/register\" className=\"nav-link \">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/login\" className=\"nav-link\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProp,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectIdentifier: \"\",\n      projectName: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //lifeCycle Hooks\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    } else {\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectIdentifier: this.state.projectIdentifier,\n      projectName: this.state.projectName,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(newProject, this.props.history);\n    console.log(newProject);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        {}\n\n        <div className=\"register\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"startDate\"\n                      value={this.state.startDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"endDate\"\n                      value={this.state.endDate}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProp,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          projectTasks => projectTasks.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProject, createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectIdentifier: \"\",\n      id: \"\",\n      projectName: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectIdentifier: this.state.projectIdentifier,\n      projectName: this.state.projectName,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectIdentifier,\n      projectName,\n      description,\n      startDate,\n      endDate\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectIdentifier,\n      projectName,\n      description,\n      startDate,\n      endDate\n    });\n  }\n\n  componentWillMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Edit Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProp,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\n\nclass ProjectTask extends Component {\n  onDeleteClicked(backlog_id, ps_id) {\n    this.props.deleteProjectTask(backlog_id, ps_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityString = \"HIGH\";\n      priorityClass = \"bg-danger text-light\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityString = \"MEDIUM\";\n      priorityClass = \"bg-warning text-light\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityString = \"LOW\";\n      priorityClass = \"bg-info text-light\";\n    }\n\n    if (project_task.priority === 0) {\n      priorityString = \"LOW\";\n      priorityClass = \"bg-info text-light\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClicked.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n  //errors: PropTypes.object.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklogs = backlog_id => async dispatch => {\n  try {\n    const resp = await axios.get(`/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: resp.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  ps_id,\n  history\n) => async dispatch => {\n  try {\n    const resp = await axios.get(`/backlog/${backlog_id}/${ps_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: resp.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  ps_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    const resp = await axios.patch(\n      `/backlog/${backlog_id}/${ps_id}`,\n      project_task\n    );\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, ps_id) => async dispatch => {\n  try {\n    const resp = await axios.delete(\n      `http://3.20.54.196:8080/backlog/${backlog_id}/${ps_id}`\n    );\n\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: ps_id\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./projectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_task_props } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task_props.priority === 1) {\n      priorityString = \"HIGH\";\n      priorityClass = \"bg-danger text-light\";\n    }\n\n    const tasks = project_task_props.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let toDoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      console.log(tasks[i].props.project_task.status);\n\n      //TODO List\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        toDoItems.push(tasks[i]);\n      }\n\n      //InProgress List\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      //Done List\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-secondary text-white\">\n                  <h3>TO DO</h3>\n                </div>\n              </div>\n              {toDoItems}\n              {\n                //insert here\n              }\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-primary text-white\">\n                  <h3>In Progress</h3>\n                </div>\n              </div>\n              {inProgressItems}\n\n              {\n                //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n              }\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"card text-center mb-2\">\n                <div className=\"card-header bg-success text-white\">\n                  <h3>Done</h3>\n                </div>\n              </div>\n              {doneItems}\n\n              {\n                //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBacklogs } from \"../../actions/backlogAction\";\nimport classnames from \"classnames\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    this.props.getBacklogs(id);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let boardContent;\n\n    const boardAlgo = (errors, projectTasks) => {\n      if (projectTasks.length < 1) {\n        if (errors.projectTaskNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectTaskNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Task\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_task_props={projectTasks} />;\n      }\n    };\n\n    boardContent = boardAlgo(errors, projectTasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`}>\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {boardContent}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nProjectBoard.propTypes = {\n  getBacklogs: PropTypes.func.isRequired,\n  backlog: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default connect(\n  mapStateToProp,\n  { getBacklogs }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogAction\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      dueDate: \"\",\n      priority: 0,\n      status: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  //lifeCycle Hooks\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    } else {\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      dueDate: this.state.dueDate,\n      priority: this.state.priority,\n      status: this.state.status\n    };\n    const { id } = this.props.match.params;\n    this.props.addProjectTask(id, newProjectTask, this.props.history);\n    console.log(newProjectTask);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                    placeholder=\"Project Task summary\"\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  // projectTask: state.projectTask,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProp,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogAction\";\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: null,\n      createdAt: \"\",\n      projectIdentifier: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, ps_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, ps_id, this.props.history);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProjectTasks = {\n      id: this.state.id,\n      summary: this.state.summary,\n      projectSequence: this.state.projectSequence,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      dueDate: this.state.dueDate,\n      priority: this.state.priority,\n      status: this.state.status,\n      createdAt: this.state.createdAt,\n      projectIdentifier: this.state.projectIdentifier\n    };\n    const { id } = this.props.match.params;\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updateProjectTasks,\n      this.props.history\n    );\n    // console.log(updateProjectTask);\n\n    // this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence,updateProjectTasks);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    } else {\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      createdAt,\n      projectIdentifier\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      createdAt,\n      projectIdentifier\n    });\n  }\n  render() {\n    console.log(\"in project task\");\n    const { errors } = this.state;\n\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} + Project Code\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  projectTask: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  // projectTask: state.projectTask,\n  projectTask: state.backlog.projectTask,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProp,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n\n                <Link to=\"/login\" className=\"btn btn-lg btn-primary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProp)(Landing);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      password: \"\",\n      fullName: \"\",\n      username: \"\",\n      confirmPassword: \"\",\n      error: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const registerUser = {\n      password: this.state.password,\n      fullName: this.state.fullName,\n      username: this.state.username,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(registerUser, this.props.history);\n\n    console.log(registerUser);\n    // console.log(updateProjectTask);\n\n    // this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence,updateProjectTasks);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    } else {\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form action=\"create-profile.html\" onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.fullName\n                    })}\n                    placeholder=\"Name\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                    name=\"fullName\"\n                  />\n                  {this.props.errors.fullName && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.fullName}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {(this.props.errors.username ||\n                    this.props.errors.userAlreadyExists) && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.username}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {this.props.errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.password}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {this.props.errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProp,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      password: \"\",\n      username: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const loginUser = {\n      password: this.state.password,\n      username: this.state.username\n    };\n\n    this.props.login(loginUser);\n    console.log(loginUser);\n  }\n\n  //lifeCycle Hooks\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    } else {\n    }\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Login</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {this.props.errors.username && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.username}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.props.errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {this.props.errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {this.props.errors.password}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProp,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport ProjectItem from \"./components/project/ProjectItem\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/projectBoard/projectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/projectBoard/projectTasks/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/userManagement/Register\";\nimport Login from \"./components/userManagement/Login\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecurityRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  //decode token on react\n\n  const decoded = jwt_decode(jwtToken);\n\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded\n  });\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    //logout when token expires\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          {\n            //private routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            //public routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:ps_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}